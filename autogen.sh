#!/bin/bash

if [ -z $LIBTOOLIZE ] ; then
    LIBTOOLIZE=$(type -P libtoolize)
    if [ -z $LIBTOOLIZE ] ; then
        LIBTOOLIZE=$(type -P glibtoolize)
    fi
fi
if [ -z $LIBTOOL ] ; then
    LIBTOOL=$(type -P "${LIBTOOLIZE%???}")
fi

if [ -z $LIBTOOL ] || [ -z $LIBTOOLIZE ] ; then
    echo "Unable to find working libtool. [$LIBTOOL][$LIBTOOLIZE]"
    exit 1
fi

# Make a new Makefile.am in src
BASE_DIR=`pwd`

cd $BASE_DIR/src/sst/elements
echo "# Autogenerated by SST Autogen" > Makefile.am
echo -n "SUBDIRS = " >> Makefile.am

for elem_dir in `ls ./`; do 
	if [ -d $elem_dir ]; then
		if [ -r $elem_dir/Makefile.am ]; then
			echo "Found: $elem_dir/Makefile.am"
			echo " \\" >> Makefile.am
			echo -n "     $elem_dir" >> Makefile.am
		fi

		sst_elements="$sst_elements $elem_dir"
	fi
done

cd $BASE_DIR

echo "dnl Automatically created by SST Autogen System" > config/sst_elements_include.m4

for file in `ls $BASE_DIR/src/sst/elements/*`; do
	if [ -d "$file" ]; then
		if [ -r "$file/configure.m4" ]; then
			echo "m4_include($file)" >> config/sst_elements_include.m4
		fi
	fi
done

echo "m4_define([sst_elements], [$sst_elements])" >> config/sst_elements_include.m4

# Delete the old libtool output
rm -rf libltdl src/libltdl

echo "Running ${LIBTOOLIZE}..."
$LIBTOOLIZE --automake --copy --ltdl

if test -d libltdl; then
        echo "Moving libltdl to src .."
        mv libltdl ./src/
fi

if test ! -d src/libltdl ; then
    echo "libltdl for elements exist.  Aborting."
    exit 1
fi

aclocal -I config
autoheader
autoconf
automake --foreign --add-missing --include-deps
autoreconf --force --install
